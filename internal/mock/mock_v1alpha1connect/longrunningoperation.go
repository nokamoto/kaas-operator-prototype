// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/api/proto/v1alpha1/v1alpha1connect (interfaces: LongRunningOperationServiceClient)
//
// Generated by this command:
//
//	mockgen ./pkg/api/proto/v1alpha1/v1alpha1connect LongRunningOperationServiceClient
//

// Package mock_v1alpha1connect is a generated GoMock package.
package mock_v1alpha1connect

import (
	context "context"
	reflect "reflect"

	connect "connectrpc.com/connect"
	v1alpha1 "github.com/nokamoto/kaas-operator-prototype/pkg/api/proto/v1alpha1"
	gomock "go.uber.org/mock/gomock"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// MockLongRunningOperationServiceClient is a mock of LongRunningOperationServiceClient interface.
type MockLongRunningOperationServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockLongRunningOperationServiceClientMockRecorder
	isgomock struct{}
}

// MockLongRunningOperationServiceClientMockRecorder is the mock recorder for MockLongRunningOperationServiceClient.
type MockLongRunningOperationServiceClientMockRecorder struct {
	mock *MockLongRunningOperationServiceClient
}

// NewMockLongRunningOperationServiceClient creates a new mock instance.
func NewMockLongRunningOperationServiceClient(ctrl *gomock.Controller) *MockLongRunningOperationServiceClient {
	mock := &MockLongRunningOperationServiceClient{ctrl: ctrl}
	mock.recorder = &MockLongRunningOperationServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLongRunningOperationServiceClient) EXPECT() *MockLongRunningOperationServiceClientMockRecorder {
	return m.recorder
}

// GetOperation mocks base method.
func (m *MockLongRunningOperationServiceClient) GetOperation(arg0 context.Context, arg1 *connect.Request[v1alpha1.GetOperationRequest]) (*connect.Response[v1alpha1.LongRunningOperation], error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOperation", arg0, arg1)
	ret0, _ := ret[0].(*connect.Response[v1alpha1.LongRunningOperation])
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOperation indicates an expected call of GetOperation.
func (mr *MockLongRunningOperationServiceClientMockRecorder) GetOperation(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOperation", reflect.TypeOf((*MockLongRunningOperationServiceClient)(nil).GetOperation), arg0, arg1)
}

// ListOperations mocks base method.
func (m *MockLongRunningOperationServiceClient) ListOperations(arg0 context.Context, arg1 *connect.Request[emptypb.Empty]) (*connect.Response[v1alpha1.ListOperationsResponse], error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOperations", arg0, arg1)
	ret0, _ := ret[0].(*connect.Response[v1alpha1.ListOperationsResponse])
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOperations indicates an expected call of ListOperations.
func (mr *MockLongRunningOperationServiceClientMockRecorder) ListOperations(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOperations", reflect.TypeOf((*MockLongRunningOperationServiceClient)(nil).ListOperations), arg0, arg1)
}
